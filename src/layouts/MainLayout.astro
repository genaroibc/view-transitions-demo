---
import "@/styles/globals.css"
import Header from "@/shared/Header.astro"

interface Props {
  title: string
  description: string
}

const { description, title } = Astro.props
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="description" content={description} />
    <meta name="view-transition" content="same-origin" />

    <title>{title}</title>
  </head>
  <body class="max-w-7xl mx-auto">
    <Header />
    <slot />
  </body>
</html>

<script>
  declare global {
    interface Document {
      startViewTransition(callback: () => void): void
    }

    interface Window {
      navigation: {
        addEventListener(
          event: "navigate",
          callback: (event: {
            destination: { url: string }
            intercept: (options: {
              handler: () => Promise<void>
            }) => Promise<void>
          }) => void
        ): void
      }
    }
  }

  if (window.navigation && document.startViewTransition) {
    window.navigation.addEventListener("navigate", event => {
      const toURL = new URL(event.destination.url)

      if (location.origin !== toURL.origin) return

      event.intercept({
        async handler() {
          const response = await fetch(toURL.pathname)
          const html = await response.text()

          const [, title = ""] = html.match(/<title>([\s\S]*)<\/title>/i) ?? []
          const [, content = ""] = html.match(/<body>([\s\S]*)<\/body>/i) ?? []

          document.startViewTransition(() => {
            // scroll top
            document.body.innerHTML = content
            document.title = title
            document.documentElement.scrollTop = 0
          })
        }
      })
    })
  }
</script>
